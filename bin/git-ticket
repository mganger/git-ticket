#!/bin/bash

BRANCH=$(git status | head -1 | sed -r 's/On branch (.*)$/\1/')

get_string() {
	string=$2
	file=$1
	grep $string $file | cut -d: -f 2
}

case $1 in 
	init)
		if git checkout --orphan ticket 2> /dev/null
		then
			echo Created new branch \'ticket\'
			#remove files in branch
			rm -rf $(ls)

			#make ticket directory
			mkdir ticket
			touch ticket/.ticket
			git add -A
			git commit -m 'Initial ticket branch commit'
			git checkout $BRANCH
		else
			echo Tickets already initialized
		fi
		;;

	assign)
		;;
	attach)
		;;
	checkout)
		;;
	comment)
		;;
	list)
		;;
	new)
		if git checkout ticket 2> /dev/null
		then
			TMP_FILE=$(mktemp)

			#copy file into it
			echo "title  : " >> $TMP_FILE
			echo "type   : " >> $TMP_FILE
			echo "assign : " >> $TMP_FILE
			echo "root   : " >> $TMP_FILE
			echo "desc   : " >> $TMP_FILE
			vim $TMP_FILE

			TITLE=$(get_string $TMP_FILE title)
			DESC=$(get_string $TMP_FILE desc)
			TYPE=$(get_string $TMP_FILE 'type')
			ASSIGN=$(get_string $TMP_FILE assign)
			ROOT=$(get_string $TMP_FILE root)

			HASH=$(echo -n $TITLE | sha256sum)

			echo $TITLE

			#create the issue by making directories
			cd ticket
			if mkdir -p $ROOT 2> /dev/null
			then
				cd $ROOT
			fi
			mkdir $TITLE && cd $TITLE

			echo $ASSIGN > assigned-to
			echo $DESC   > description
			echo $TYPE   > 'type'
			echo $HASH   > 'hash'
			echo open    > 'status'

			cd -
			git add -A ticket                     2> /dev/null
			git commit -m "Added ticket ${TITLE}" 2> /dev/null
			git checkout $BRANCH                  2> /dev/null
		else
			echo Tickets have not been initialized yet, or you have uncommitted changes
		fi
		;;
	points)
		;;
	recent)
		;;
	show)
		;;
	state)
		;;
	sync)
		;;
	*)
		;;
esac
